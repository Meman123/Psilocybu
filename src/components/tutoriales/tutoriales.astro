---
import { Icon } from 'astro-icon/components';

interface Video {
  id: string;
  dur: string;
  title: string;
  thumb: string;
}

const videos: Video[] = [
  { id: '1072553822', dur: '1:45', title: 'Unboxing y preparación inicial', thumb: 'https://i.vimeocdn.com/video/2001538867-91a68f149692c41e46e2c3bb7e42b427ccaec08cee7b3a0e9b8eac62964f21d1-d_640?region=us' },
  { id: '1072553822', dur: '1:45', title: 'Unboxing y preparación inicial', thumb: 'https://i.vimeocdn.com/video/2001538867-91a68f149692c41e46e2c3bb7e42b427ccaec08cee7b3a0e9b8eac62964f21d1-d_640?region=us' },
  { id: '1072553822', dur: '1:45', title: 'Unboxing y preparación inicial', thumb: 'https://i.vimeocdn.com/video/2001538867-91a68f149692c41e46e2c3bb7e42b427ccaec08cee7b3a0e9b8eac62964f21d1-d_640?region=us' },
  { id: '1072553822', dur: '1:45', title: 'Unboxing y preparación inicial', thumb: 'https://i.vimeocdn.com/video/2001538867-91a68f149692c41e46e2c3bb7e42b427ccaec08cee7b3a0e9b8eac62964f21d1-d_640?region=us' },
];
---
<style>
/* --- VARIABLES SUGERIDAS --- */
:root {
  --color-background-soft: #fffc553a;
  --color-border-subtle: hsl(0 0% 100% / 0.1);
  --radius-large: 16px;
}

/* --- BLOQUE PRINCIPAL Y TEXTOS --- */
.tutorials {
  background: hsla(60, 100%, 90%, 0.5);
  padding-block: var(--spacing-xl);
  position: relative;
  overflow: hidden; /* Para los efectos de fondo */
}
.tutorials__container {
  max-width: var(--site-max-width);
  margin: auto;
  padding-inline: var(--side-gutter);
  display: flex;
  flex-direction: column;
  gap: var(--spacing-lg);
  text-align: center;
}
.tutorials__headline {
  font: clamp(2.3rem, 4.5vw, 3.5rem) / 1.1 var(--font-family-base);
  font-weight: var(--font-weight-bold);
}
.tutorials__sub {
  font-size: 1.2rem;
  color: var(--color-text);
  max-width: 80ch;
  margin: auto;
  font-weight: 500;
}
.tutorials__alert {
  background: var(--color-accent);
  padding: var(--spacing-sm) var(--spacing-md);
  border-radius: var(--border-radius-medium);
  font-weight: var(--font-weight-semibold);
  color: #000;
  margin: 0 auto;
}
.tutorials__alert a {
  text-decoration: underline;
  color: inherit;
}

/* --- NUEVO LAYOUT DE CARRUSEL HORIZONTAL --- */
.tutorials__scroll-container {
  display: flex;
  overflow-x: auto;
  gap: var(--spacing-md);
  padding-block: var(--spacing-lg); /* Espacio para la sombra y hover */
  margin-inline: calc(-1 * var(--side-gutter)); /* Sangrado para que se vea que hay más */
  padding-inline: var(--side-gutter);
  /* Ocultar la barra de scroll */
  scrollbar-width: none; /* Firefox */
}
.tutorials__scroll-container::-webkit-scrollbar {
  display: none; /* Chrome, Safari, and Opera */
}

/* --- NUEVO DISEÑO DE TARJETA DE VIDEO --- */
.video-card {
  /* Estilo base */
  background: var(--color-background-soft);
  border: 1px solid var(--color-border-subtle);
  border-radius: var(--radius-large);
  overflow: hidden;
  position: relative;
  aspect-ratio: 16 / 9;
  flex-shrink: 0;
  width: clamp(280px, 70vw, 320px); /* Ancho flexible */
  box-shadow: 0 4px 16px -2px hsla(0, 0%, 0%, 0.3);
  
  /* Transiciones para efectos */
  transition: transform 0.3s ease, box-shadow 0.3s ease, border-color 0.3s ease;
  cursor: pointer;
}
.video-card:hover {
  transform: translateY(-8px) scale(1.02);
  box-shadow: 0 8px 24px -4px hsla(0, 0%, 0%, 0.5);
  border-color: var(--color-accent);
}

.video-card__thumb {
  width: 100%;
  height: 100%;
  display: block;
  object-fit: cover;
  transition: transform 0.4s ease;
}
.video-card:hover .video-card__thumb {
  transform: scale(1.1);
}

/* Superposición para info y play button */
.video-card__overlay {
  position: absolute;
  inset: 0;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  padding: var(--spacing-md);
  /* Gradiente para legibilidad del texto */
  background: linear-gradient(to top, #fffc5531 0%, transparent 40%);
}

.video-card__play-icon {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: white;
  filter: drop-shadow(0 2px 4px hsla(0, 0%, 0%, 0.5));
  transition: transform 0.3s ease;
}
.video-card:hover .video-card__play-icon {
  transform: translate(-50%, -50%) scale(1.15);
}

.video-card__info {
  color: #000000;
  text-align: left;
  width: 100%;
}
.video-card__title {
  font-weight: var(--font-weight-bold);
  font-size: 1.1rem;
  line-height: 1.3;
}
.video-card__duration {
  font-size: 0.8rem;
  font-weight: var(--font-weight-medium);
  background: hsla(0, 0%, 0%, 0.5);
  padding: 2px 8px;
  border-radius: 99px;
  backdrop-filter: blur(4px);
  margin-top: 4px;
  display: inline-block;
}

/* --- CTA (sin cambios) --- */
.tutorials__cta {
  align-self: center;
  padding: 12px 32px;
  border-radius: 99px;
  font-weight: var(--font-weight-bold);
  background: transparent;
  border: 1px solid var(--color-text);
  display: inline-flex;
  align-items: center;
  gap: 8px;
  transition: transform .25s, background .25s;
  color: var(--color-text);
  text-decoration: none;
}
.tutorials__cta:hover {
  background: var(--color-accent);
  transform: scale(1.04);
  color: #000;
}

/* --- NUEVO MODAL FULLSCREEN --- */
dialog.video-modal {
  border: none;
  padding: 0;
  background: #000;
  width: 100%;
  height: 100%;
  max-width: 100vw;
  max-height: 100vh;
  overflow: hidden;
}
dialog.video-modal::backdrop {
  background: hsla(0, 0%, 0%, 0.5);
  backdrop-filter: blur(8px);
}
/* Animación de entrada */
@keyframes fadeInScaleUp {
  from { opacity: 0; transform: scale(0.9); }
  to { opacity: 1; transform: scale(1); }
}
dialog.video-modal[open] {
  animation: fadeInScaleUp 0.3s ease-out forwards;
}

.modal-content {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}
.modal-content iframe {
  width: 100%;
  max-width: 1600px; /* Limita el ancho en pantallas ultra-wide */
  aspect-ratio: 16 / 9;
  border: 0;
}
.modal-close {
  position: absolute;
  top: 16px;
  right: 16px;
  background: hsla(0, 0%, 100%, 0.1);
  border: 1px solid hsla(0, 0%, 100%, 0.2);
  color: #fff;
  border-radius: 50%;
  padding: 8px;
  cursor: pointer;
  display: grid;
  place-items: center;
  transition: background 0.2s ease, transform 0.2s ease;
}
.modal-close:hover {
  background: hsla(0, 0%, 100%, 0.2);
  transform: scale(1.1);
}

/* --- BREAKPOINTS --- */
@media (min-width: 768px) {
  /* En tablets, el carrusel se convierte en un grid */
  .tutorials__scroll-container {
    display: grid;
    grid-template-columns: 1fr 1fr;
    margin-inline: 0; /* Reseteamos el sangrado */
    padding-inline: 0;
  }
  .video-card {
    width: auto; /* El grid controla el ancho */
  }
}
@media (min-width: 1024px) {
  .tutorials__scroll-container {
    grid-template-columns: repeat(2, 1fr); /* 3 columnas en desktop */
  }
}
@media (min-width: 1400px) {
  .tutorials__scroll-container {
    grid-template-columns: repeat(3, 1fr); /* 4 columnas en pantallas muy grandes */
  }
}
</style>

<section class="tutorials" id="tutorials">
  <div class="tutorials__container">
    <h2 class="tutorials__headline">Aprende paso a paso</h2>
    <p class="tutorials__sub">PSILOCYBU GrowKit® contiene 1 L de micelio albino Averys listo para fructificar. Es muy sensible a la contaminación; sigue cada paso del video para evitar pérdidas y conoce nuestra política de garantía.</p>

    <div class="tutorials__alert">
      Lee las instrucciones antes de abrir tu kit · <a href="/garantia">Revisa nuestra política de garantía</a>
    </div>

    <div class="tutorials__scroll-container">
      {videos.map(video => (
        <button
          class="video-card"
          data-video-id={video.id}
          data-video-title={video.title}
          aria-label={`Reproducir video: ${video.title}`}
        >
          <img
            class="video-card__thumb"
            src={video.thumb}
            alt={`Miniatura del video: ${video.title}`}
            loading="lazy"
            width="320"
            height="180"
          />
          <div class="video-card__overlay" aria-hidden="true">
            <div class="video-card__info">
              <h3 class="video-card__title">{video.title}</h3>
              <span class="video-card__duration">{video.dur}</span>
            </div>
            <div class="video-card__play-icon">
              <Icon name="mdi:play-circle" width="80" />
            </div>
          </div>
        </button>
      ))}
    </div>

    <a href="/tutoriales" class="tutorials__cta">
      Ver más tutoriales <Icon name="mdi:arrow-right" width="20" />
    </a>
  </div>

  <dialog class="video-modal" id="videoModal">
    <div class="modal-content">
      <iframe></iframe>
    </div>
    <button class="modal-close" aria-label="Cerrar video">
      <Icon name="mdi:close" width="32" />
    </button>
  </dialog>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const modal = document.getElementById('videoModal') as HTMLDialogElement | null;
      if (!modal) return;

      const iframe = modal.querySelector('iframe');
      const closeBtn = modal.querySelector('.modal-close');
      const videoCards = document.querySelectorAll('.video-card');

      // Función para abrir el modal
      const openModal = (btn: Element) => {
        if (!(iframe && btn instanceof HTMLElement)) return;

        const { videoId, videoTitle } = btn.dataset;
        if (!videoId) return;

        iframe.src = `https://player.vimeo.com/video/${videoId}?autoplay=1&playsinline=1&badge=0&autopause=0&player_id=0&app_id=58479`;        iframe.title = `Video: ${videoTitle || 'Tutorial'}`;
        modal.showModal();
      };

      // Función para cerrar el modal
      const closeModal = () => {
        modal.close();
      };

      // El iframe se limpia cuando la animación de cierre termina
      modal.addEventListener('close', () => {
        if (iframe) iframe.src = '';
      });

      // Asignar evento de click a cada tarjeta
      videoCards.forEach(card => {
        card.addEventListener('click', () => openModal(card));
      });
      
      // Asignar evento al botón de cierre
      closeBtn?.addEventListener('click', closeModal);
      
      // Cerrar si se hace click en el fondo (backdrop)
      modal.addEventListener('click', (event) => {
        if (event.target === modal) {
          closeModal();
        }
      });
    });
  </script>
  <script src="https://player.vimeo.com/api/player.js" ></script>
</section>