---
// src/components/Checkout.astro
import { Image } from 'astro:assets';
import growkitImage from '@/assets/growkit-psilocybu.png';
import mpLogo from '@/assets/Logo.png';
import cardLogos from '@/assets/Logo.png';

const { checkoutUrl } = Astro.props;
const basePrice = 70000;
---
<style>
  :root {
    --color-accent: #fffc55;
    --font-family-headings: 'Quicksand', sans-serif;
  }
  .checkout-section {
    background: #f4f4f4;
    padding: var(--spacing-xl, 48px) 0;
  }
  .checkout-container {
    max-width: 1100px;
    margin-inline: auto;
    padding-inline: var(--side-gutter, 16px);
    display: grid;
    grid-template-columns: 1fr;
    gap: 2rem 4rem;
  }
  @media (min-width: 900px) {
    .checkout-container {
      grid-template-columns: 1.2fr 1fr;
    }
  }
  .form-column {
    background: #fff;
    padding: 2.5rem;
    border-radius: 24px;
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.08);
  }
  .form-header {
    text-align: center;
    margin-bottom: 2rem;
  }
  .form-header h2 {
    font-family: var(--font-family-headings);
    font-size: 2.2rem;
    margin: 0;
  }
  .shipping-form {
    display: flex;
    flex-direction: column;
    gap: 1.25rem;
  }
  .form-group {
    display: flex;
    flex-direction: column;
    gap: 8px;
  }
  .shipping-form label {
    font-weight: 600;
    font-size: 0.9rem;
    color: #333;
  }
  .shipping-form input {
    border: 1px solid #ddd;
    padding: 14px;
    border-radius: 10px;
    font-size: 1rem;
    transition: all 0.2s ease;
  }
  .shipping-form input:focus {
    outline: none;
    border-color: var(--color-accent);
    box-shadow: 0 0 0 3px rgba(255, 252, 85, 0.5);
  }
  .summary-column {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }
  .order-summary {
    display: flex;
    flex-direction: column;
    gap: 1.2rem;
    align-items: center;
    padding-bottom: 1.5rem;
    border-bottom: 1px solid #eee;
  }
  .summary-img {
    width: 260px;
    height: 260px;
    border-radius: 16px;
    overflow: hidden;
    background: #f6f6f6;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 0.5rem;
  }
  .summary-img img, .summary-img picture {
    width: 100%;
    height: 100%;
    object-fit: contain;
    display: block;
  }
  .summary-details {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
    width: 100%;
  }
  .summary-details h3 {
    margin: 0 0 0.5rem 0;
    font-family: var(--font-family-headings);
    font-size: 1.35rem;
  }
  .quantity-selector {
    display: flex;
    align-items: center;
    gap: 1rem;
  }
  .quantity-selector button {
    width: 32px;
    height: 32px;
    border-radius: 50%;
    border: 1px solid #ccc;
    background: #fff;
    font-size: 1.5rem;
    line-height: 1;
    cursor: pointer;
    transition: background 0.2s ease;
  }
  .quantity-selector button:hover {
    background: #f0f0f0;
  }
  .quantity-selector span {
    font-size: 1.2rem;
    font-weight: 700;
  }
  .total-price {
    font-size: 1.5rem;
    font-weight: 700;
    font-family: var(--font-family-headings);
    text-align: right;
  }
  .benefits-list {
    list-style: none;
    padding: 0;
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
  .benefit-item {
    display: flex;
    align-items: center;
    gap: 12px;
    font-weight: 500;
    font-size: 1rem;
  }
  .benefit-item::before {
    content:"✓";
    flex-shrink:0;
    width: 22px;
    height: 22px;
    border-radius: 50%;
    background: var(--color-accent);
    color: #83812c;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
  }
  .pay-button {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 8px;
    width: 100%;
    padding: 16px;
    margin-top: 1rem;
    border: none;
    border-radius: 12px;
    background: var(--color-accent);
    color: #333;
    font-size: 1.15rem;
    font-weight: 700;
    font-family: var(--font-family-headings);
    cursor: pointer;
    box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    transition: all 0.2s ease;
    letter-spacing: 0.01em;
  }
  .pay-button:hover {
    transform: translateY(-3px);
    box-shadow: 0 7px 20px rgba(0,0,0,0.15);
  }
  .pay-button:disabled {
    background-color: #e0e0e0;
  }
  .security-footer {
    text-align: center;
    margin-top: 1.5rem;
  }
  .security-footer span {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 8px;
    font-size: 0.9rem;
    color: #555;
    margin-bottom: 1rem;
  }
  .security-logos img {
    height: 25px;
    opacity: 0.7;
    margin: 0 8px;
  }
</style>

<section class="checkout-section" id="comprar">
  <div class="checkout-container">

    <div class="form-column">
      <header class="form-header">
        <h2>Información de Envío</h2>
        <p>Completa tus datos para recibir el pedido.</p>
      </header>

      <form id="shipping-form" class="shipping-form" autocomplete="on">
        <div class="form-group">
          <label for="name">Nombre Completo</label>
          <input type="text" id="name" name="name" required placeholder="Quien recibe el paquete" autocomplete="name" />
        </div>
        <div class="form-group">
          <label for="phone">Teléfono (WhatsApp)</label>
          <input type="tel" id="phone" name="phone" required placeholder="Para coordinar la entrega" autocomplete="tel" />
        </div>
        <div class="form-group">
          <label for="address">Dirección de Entrega</label>
          <input type="text" id="address" name="address" required placeholder="Incluye apto, casa o barrio" autocomplete="street-address" />
        </div>
        <div class="form-group">
          <label for="city">Ciudad</label>
          <input type="text" id="city" name="city" required autocomplete="address-level2" />
        </div>
        <div class="form-group">
          <label for="department">Departamento</label>
          <input type="text" id="department" name="department" required autocomplete="address-level1" />
        </div>
        <button type="submit" id="pay-button" class="pay-button">
          <svg width="22" height="22" viewBox="0 0 38 38" fill="none" xmlns="http://www.w3.org/2000/svg" style="margin-right:4px;">
            <rect x="2" y="8" width="34" height="22" rx="4" fill="#fff" stroke="#3ec6fa" stroke-width="2"/>
            <rect x="2" y="14" width="34" height="8" fill="#3ec6fa" opacity="0.22"/>
            <circle cx="8" cy="27" r="2" fill="#3ec6fa"/>
          </svg>
          Pago seguro con Mercado Pago
        </button>
      </form>
    </div>

    <div class="summary-column">
      <div class="order-summary">
        <div class="summary-img">
          <Image src={growkitImage} alt="Growkit Premium" width={260} height={260} style="object-fit: contain; width: 100%; height: 100%;" />
        </div>
        <div class="summary-details">
          <h3>Growkit Premium</h3>
          <div class="quantity-selector">
            <button type="button" id="btn-minus" aria-label="Restar">-</button>
            <span id="quantity-display">1</span>
            <button type="button" id="btn-plus" aria-label="Sumar">+</button>
          </div>
          <div id="total-price" class="total-price"></div>
        </div>
      </div>

      <ul class="benefits-list">
        <li class="benefit-item">Envío gratis a toda Colombia</li>
        <li class="benefit-item">Entrega de 2 a 4 días hábiles</li>
        <li class="benefit-item">Compra 100% protegida por Mercado Pago</li>
        <li class="benefit-item">Soporte experto para tu cultivo</li>
      </ul>

      <div class="security-footer">
        <span>
          <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round"><path d="M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"/></svg>
          Pago Seguro y Confiable
        </span>
        <div class="security-logos">
          <img src={mpLogo.src} alt="Logo de Mercado Pago" />
          <img src={cardLogos.src} alt="Logos de tarjetas Visa, Mastercard, Amex" />
        </div>
      </div>
    </div>
  </div>
</section>

<script type="module" define:vars={{ checkoutUrl, basePrice }}>
  let quantity = 1;

  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('shipping-form');
    const payButton = document.getElementById('pay-button');
    const btnMinus = document.getElementById('btn-minus');
    const btnPlus = document.getElementById('btn-plus');
    const quantityDisplay = document.getElementById('quantity-display');
    const totalPriceDisplay = document.getElementById('total-price');

    function updateUI() {
      const total = basePrice * quantity;
      const formattedTotal = new Intl.NumberFormat('es-CO', {
        style: 'currency',
        currency: 'COP',
        minimumFractionDigits: 0,
      }).format(total);
      quantityDisplay.textContent = quantity;
      totalPriceDisplay.textContent = formattedTotal;
      // El botón ya no cambia el texto dinámicamente
    }

    btnMinus.addEventListener('click', () => {
      if (quantity > 1) {
        quantity--;
        updateUI();
      }
    });

    btnPlus.addEventListener('click', () => {
      quantity++;
      updateUI();
    });

    form.addEventListener('submit', async (event) => {
      event.preventDefault();
      const originalButtonHTML = payButton.innerHTML;
      payButton.innerHTML = "Procesando...";
      payButton.disabled = true;
      const formData = new FormData(form);
      const shippingData = Object.fromEntries(formData.entries());
      shippingData.quantity = quantity;
      shippingData.unit_price = basePrice;
      shippingData.total_amount = basePrice * quantity;
      try {
        const response = await fetch(checkoutUrl, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(shippingData)
        });
        if (!response.ok) throw new Error(`Error del servidor: ${response.statusText}`);
        const data = await response.json();
        if (data.checkoutUrl) {
          window.location.href = data.checkoutUrl;
        } else {
          throw new Error('La respuesta no contenía la URL de pago.');
        }
      } catch (error) {
        console.error("Error en el proceso de pago:", error);
        alert("Hubo un problema al procesar el pago. Por favor, inténtalo de nuevo.");
        payButton.innerHTML = originalButtonHTML;
        payButton.disabled = false;
      }
    });

    updateUI();
  });
</script>
